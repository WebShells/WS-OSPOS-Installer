#!/bin/sh
clear
echo "Starting OSPOS Installation Process"
echo ""
echo "###########################################################################"
echo "#  __      __      ___.     _________.__           .__  .__               #"
echo "# /  \    /  \ ____\_ |__  /   _____/|  |__   ____ |  | |  |   ______     #"
echo "# \   \/\/   // __ \| __ \ \_____  \ |  |  \_/ __ \|  | |  |  /  ___/     #"
echo "#  \        /\  ___/| \_\ \/        \|   Y  \  ___/|  |_|  |__\___ \      #"
echo "#   \__/\  /  \___  >___  /_______  /|___|  /\___  >____/____/____  >     #"
echo "#        \/       \/    \/        \/      \/     \/               \/      #"
echo "#                         WS - OS POS Auto Installer                      #"
echo "###########################################################################"

progress () {
    local s=0.25
    local f=0.25
    local TXT="${1}"
    local fmt="${2}"
    local str="########################"

    while true; do
        for i in {1..14}; do
            sleep $f
            s=$(echo ${s} + ${f} | bc)
            printf "\r${fmt}[%-13s%s" "${TXT#*]}" "${str:0:$i}" "] Estimated Time: ${s}s" | tee ${tmpfile}
        done
    done
}

progress_bar() {
    if [ ! -z "${3}" ]; then
        echo ${3}
        echo "\"arg1\" \"[arg2]\""
        exit 1
    fi
    main_progress "${1}" "${2}"
}

main_progress() {
    local TXT="${2}"
    local fmt=$(echo "$TXT" | sed -n 's/^\[\(%\?.[^]]*s\).*/\1/p')
    local fmt=${fmt:-%s}
    local bg_process="${1}"
    local tmpfile=$(mktemp -t progress.XXXXXXXX)

    while true; do progress "${TXT}" ${fmt}; done &
    ${bg_process} &>/dev/null

    local total_time="$(sed -n 's/.*:\(.*s\)/\1/p' ${tmpfile})"
    total_time=${total_time:-" 0.00s"}
    printf "\r${fmt}[%-13s%s\n" "${TXT#*]}" "########################" "] Estimated Time:${total_time}"
    rm -f ${tmpfile}
    kill $!; trap 'kill $!' SIGTERM SIGINT
}
spinner() {
    local info="$1"
    local pid=$!
    local delay=0.75
    local spinstr='|/-\'
    while kill -0 $pid 2> /dev/null; do
        local temp=${spinstr#?}
        printf " [%c]  $info" "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        local reset="\b\b\b\b\b\b"
        for ((i=1; i<=$(echo $info | wc -c); i++)); do
            reset+="\b"
        done
        printf $reset
    done
    printf "    \b\b\b\b"
}

if [ "$1" = "" ];
then echo ""
echo "What would you like us to help you with ?"
echo "#########################################"
echo "Please input number of your choice, ex: 2 For Local Deployment"
echo ""
while true
do
select choice in "Web Server Configuration & Setup" "Local Deployment" "Display System Info" "Exit"
do
case $choice in
"Web Server Configuration & Setup")
echo "This isn't ready yet! Please check it back later..."
break
;;
"Local Deployment")
select sub_choice in "FreeBSD Ubuntu CentOS" "Raspberry PI" "cPanel/Online" "Back to Main Menu"
do
case $sub_choice in 
"FreeBSD Ubuntu CentOS")
echo "Preparing Ubuntu/CentOS Installation!"
echo ""
echo "Cleaning current directory from previous files!"
rm -rf ~/public_html/OSPOSBK
mv ~/public_html/OSPOS ~/public_html/OSPOSBK
rm -rf OSPOS
echo ""
rm -rf OSPOS.zip & spinner "Removing Files..."
echo ""
echo "OSPOS Retail POS ( OSPOS ) Setup will now start in $HOME Directory..."
echo ""
echo "Loading ====> 20 % "
echo ""
echo "**************************************************"
echo ""
echo "Welcome To OSPOS, OpenSourcePOS Installer"
echo ""
curl -L "https://github.com/opensourcepos/opensourcepos/releases/download/3.3.8/opensourcepos.3.3.8.ffe492.zip" -o OSPOS.zip
echo ""
unzip -qq OSPOS.zip -d OSPOS & progress_bar "sleep 4" "Extracting Files"
echo ""
rm -rf OSPOS.zip & spinner "Removing Zip Files..."
echo ""
echo "Copying files & installing scripts"
echo ""
echo "Loading =======> 44 % "
echo ""
echo "**************************************************"
echo ""
echo "OSPOS Retail POS Has Been Successfully Installed In Your Home Dir Under $HOME/OSPOS"
echo ""
echo "If You Like Our Automated System Can Generate The DB Files For You"
echo
echo -n ">> Shall We Help You Create The DB Files (Y/N)?"
echo
cd
read answer
  if test "$answer" != "Y" -a "$answer" != "y";
  then exit 0;
  else
echo
echo "Please fill in the needed configuration for MySQL connection"
echo ""
echo ">> MySQL DataBase Name?"
  read dbname
echo
echo ">> MySQL DataBase Username?"
  read usernames
echo
echo ">> MySQL User Password?"
  read passwd
echo
echo ">> What's Your Hostname?"
  read hostname
echo
echo "Creating Database Files Now..."
echo ""
echo "Loading ==============> 60 % "
echo ""
mv OSPOS/application/config/database.php OSPOS/application/config/database.php.bk
touch OSPOS/application/config/database.php
echo "<?php" >> $HOME/OSPOS/application/config/database.php
echo "defined('BASEPATH') OR exit('No direct script access allowed');" >> $HOME/OSPOS/application/config/database.php
echo "\$active_group = 'default';" >> $HOME/OSPOS/application/config/database.php
echo "\$query_builder = TRUE;" >> $HOME/OSPOS/application/config/database.php

echo "\$db['default'] = array(" >> $HOME/OSPOS/application/config/database.php
echo "  'dsn'   => ''," >> $HOME/OSPOS/application/config/database.php
echo "  'hostname' => 'localhost'," >> $HOME/OSPOS/application/config/database.php
echo "  'username' => '$(whoami)_$usernames'," >> $HOME/OSPOS/application/config/database.php
echo "  'password' => '$passwd'," >> $HOME/OSPOS/application/config/database.php
echo "  'database' => '$(whoami)_$dbname'," >> $HOME/OSPOS/application/config/database.php
echo "  'dbdriver' => 'mysqli'," >> $HOME/OSPOS/application/config/database.php
echo "  'dbprefix' => 'ospos_'," >> $HOME/OSPOS/application/config/database.php
echo "  'pconnect' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'db_debug' => (ENVIRONMENT !== 'production')," >> $HOME/OSPOS/application/config/database.php
echo "  'cache_on' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'cachedir' => ''," >> $HOME/OSPOS/application/config/database.php
echo "  'char_set' => 'utf8'," >> $HOME/OSPOS/application/config/database.php
echo "  'dbcollat' => 'utf8_general_ci'," >> $HOME/OSPOS/application/config/database.php
echo "  'swap_pre' => ''," >> $HOME/OSPOS/application/config/database.php
echo "  'encrypt' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'compress' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'stricton' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'failover' => array()," >> $HOME/OSPOS/application/config/database.php
echo "  'save_queries' => TRUE" >> $HOME/OSPOS/application/config/database.php
echo ");" >> $HOME/OSPOS/application/config/database.php
fi
echo "**************************************************"
echo ""
echo "Database Config Files Created Successfully!"
echo "Available under $HOME/OSPOS/application/config/ as database.php"
echo ""
echo "**************************************************"
echo ""
echo -n ">> Do You Want To Create & Import OSPOS Default DB (Y/N)?"
echo
read answer
  if test "$answer" != "Y" -a "$answer" != "y";
  then exit 0;
  else
echo ""
echo ">>Enter User Password:"
read -s rootpwd 
echo ""
mysql -u root -p$rootpwd --execute="CREATE SCHEMA $(whoami)_$dbname;" 2> /tmp/error1
STATUS=$? 
if [ $STATUS -eq 0 ];
then 
    echo -e "MySQL Database & User Created Successfully!"
elif (grep -i "^ERROR 1007" /tmp/error1 > /dev/null);
then
    echo -e "MySQL Database '$(whoami)_$dbname' already exists"
	echo -e "Please repeat the above process using dbname different from '$(whoami)_$dbname'"
	exit
else
    echo -e "Failed to Create Database '$(whoami)_$dbname'"
	echo -e "Please check your credentials"
	exit
fi
mysql -u root -p$rootpwd --execute="CREATE USER '$(whoami)_$usernames'@'%' IDENTIFIED BY '$passwd';" 2> /tmp/error1 
mysql -u root -p$rootpwd --execute="GRANT ALL PRIVILEGES ON $(whoami)_$dbname . * TO '$(whoami)_$usernames'@'%' IDENTIFIED BY '$passwd' WITH GRANT OPTION;" 2> /tmp/error1 
mysql -u root -p$rootpwd --execute="FLUSH PRIVILEGES;" 2> /tmp/error1 
rm -r /tmp/error1 
echo ""
echo "Importing Default DB Values..."
mysql -hlocalhost -u $(whoami)_$usernames -p$passwd $(whoami)_$dbname < $HOME/OSPOS/database/database.sql &>/dev/null & spinner
echo ""
echo ""
#echo "$count"
echo "31 SQL Tables Created"
echo ""
fi
 
echo "Removing Installation Files"
cp -R $HOME/OSPOS $HOME/public_html/OSPOS/
rm -rf $HOME/OSPOS
rm -rf WS-OSPOS-Installer*

echo "Loading ======================> 100 % "
echo ""
echo "**************************************************"
echo ""
echo "If You filled in the needed, The Installation Of"
echo "OSPOS Should Be Running Now On:"
echo ""
echo "https://$hostname/OSPOS/public"
echo ""
echo "Use below credentials in order to login to our POS"
echo ""
echo "Username: admin"
echo "Password: pointofsale"
echo ""
echo "Please keep the DB credentials safe!"
echo ""
echo "Database: $(whoami)_$dbname"
echo "Username: $(whoami)_$usernames"
echo "Password: $passwd"
echo
echo "**************************************************"
echo
echo "Enjoy Our Retail Solution OSPOS"
echo "   https://ospos.wshells.net"
echo
break
;;
"Raspberry PI")
echo "This isn't ready yet! Please check it back later..."
break
;;
"cPanel/Online")
echo "Preparing FreeBSD/cPanel Installation!"
echo ""
echo "Cleaning current directory from previous files!"
rm -rf ~/public_html/OSPOSBK
mv ~/public_html/OSPOS ~/public_html/OSPOSBK
rm -rf OSPOS
echo ""
rm -rf OSPOS.zip & spinner "Removing Files..."
echo ""
echo "OSPOS Retail POS ( OSPOS ) Setup will now start in $HOME Directory..."
echo ""
echo "Loading ====> 20 % "
echo ""
echo "**************************************************"
echo ""
echo "Welcome To OSPOS, OpenSourcePOS Installer"
echo ""
curl -L "https://github.com/opensourcepos/opensourcepos/releases/download/3.3.8/opensourcepos.3.3.8.ffe492.zip" -o OSPOS.zip
echo ""
unzip -qq OSPOS.zip -d OSPOS & progress_bar "sleep 4" "Extracting Files"
echo ""
rm -rf OSPOS.zip & spinner "Removing Zip Files..."
echo ""
echo "Copying files & installing scripts"
echo ""
echo "Loading =======> 44 % "
echo ""
echo "**************************************************"
echo ""
echo "OSPOS Retail POS Has Been Successfully Installed In Your Home Dir Under $HOME/OSPOS"
echo ""
echo "If You Like Our Automated System Can Generate The DB Files For You"
echo
echo -n ">> Shall We Help You Create The DB Files (Y/N)?"
echo
cd
read answer
  if test "$answer" != "Y" -a "$answer" != "y";
  then exit 0;
  else
echo
echo "Please fill in the needed configuration for MySQL connection"
echo ""
echo ">> MySQL DataBase Name?"
  read dbname
echo
echo ">> MySQL DataBase Username?"
  read usernames
echo
echo ">> MySQL User Password?"
  read passwd
echo
echo ">> What's Your Hostname?"
  read hostname
echo
echo "Creating Database Files Now..."
echo ""
echo "Loading ==============> 60 % "
echo ""
mv OSPOS/application/config/database.php OSPOS/application/config/database.php.bk
touch OSPOS/application/config/database.php
echo "<?php" >> $HOME/OSPOS/application/config/database.php
echo "defined('BASEPATH') OR exit('No direct script access allowed');" >> $HOME/OSPOS/application/config/database.php
echo "\$active_group = 'default';" >> $HOME/OSPOS/application/config/database.php
echo "\$query_builder = TRUE;" >> $HOME/OSPOS/application/config/database.php

echo "\$db['default'] = array(" >> $HOME/OSPOS/application/config/database.php
echo "  'dsn'   => ''," >> $HOME/OSPOS/application/config/database.php
echo "  'hostname' => 'localhost'," >> $HOME/OSPOS/application/config/database.php
echo "  'username' => '$(whoami)_$usernames'," >> $HOME/OSPOS/application/config/database.php
echo "  'password' => '$passwd'," >> $HOME/OSPOS/application/config/database.php
echo "  'database' => '$(whoami)_$dbname'," >> $HOME/OSPOS/application/config/database.php
echo "  'dbdriver' => 'mysqli'," >> $HOME/OSPOS/application/config/database.php
echo "  'dbprefix' => 'ospos_'," >> $HOME/OSPOS/application/config/database.php
echo "  'pconnect' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'db_debug' => (ENVIRONMENT !== 'production')," >> $HOME/OSPOS/application/config/database.php
echo "  'cache_on' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'cachedir' => ''," >> $HOME/OSPOS/application/config/database.php
echo "  'char_set' => 'utf8'," >> $HOME/OSPOS/application/config/database.php
echo "  'dbcollat' => 'utf8_general_ci'," >> $HOME/OSPOS/application/config/database.php
echo "  'swap_pre' => ''," >> $HOME/OSPOS/application/config/database.php
echo "  'encrypt' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'compress' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'stricton' => FALSE," >> $HOME/OSPOS/application/config/database.php
echo "  'failover' => array()," >> $HOME/OSPOS/application/config/database.php
echo "  'save_queries' => TRUE" >> $HOME/OSPOS/application/config/database.php
echo ");" >> $HOME/OSPOS/application/config/database.php
fi
echo "**************************************************"
echo ""
echo "Database Config Files Created Successfully!"
echo "Available under $HOME/OSPOS/application/config/ as database.php"
echo ""
echo "**************************************************"
echo ""
echo -n ">> Do You Want To Create & Import OSPOS Default DB (Y/N)?"
echo
read answer
  if test "$answer" != "Y" -a "$answer" != "y";
  then exit 0;
  else
echo ""
echo "MySQL Database & User Created Successfully!"
echo ""
echo "Importing Default DB Values..."
echo ""
/usr/bin/uapi  Mysql create_database name=$(whoami)_$dbname > /dev/null 2>&1
/usr/bin/uapi  Mysql create_user name=$(whoami)_$usernames password=$passwd > /dev/null 2>&1
/usr/bin/uapi  Mysql set_privileges_on_database user=$(whoami)_$usernames database=$(whoami)_$dbname privileges=ALL%20PRIVILEGES > /dev/null 2>&1
mysql -hlocalhost -u $(whoami)_$usernames -p$passwd $(whoami)_$dbname < $HOME/OSPOS/database/database.sql &>/dev/null & spinner
echo ""
echo "31 SQL Tables Created"
echo ""
fi
echo "Removing Installation Files"
cp -R $HOME/OSPOS $HOME/public_html/OSPOS/
rm -rf $HOME/OSPOS
rm -rf WS-OSPOS-Installer*

echo "Loading ======================> 100 % "
echo ""
echo "**************************************************"
echo ""
echo "If You filled in the needed, The Installation Of"
echo "OSPOS Should Be Running Now On:"
echo ""
echo "https://$hostname/OSPOS/public"
echo ""
echo "Use below credentials in order to login to our POS"
echo ""
echo "Username: admin"
echo "Password: pointofsale"
echo ""
echo "Please keep the DB credentials safe!"
echo ""
echo "Database: $(whoami)_$dbname"
echo "Username: $(whoami)_$usernames"
echo "Password: $passwd"
echo
echo "**************************************************"
echo
echo "Enjoy Our Retail Solution OSPOS"
echo "   https://ospos.wshells.net"
echo
break
;;
"Back to Main Menu")
echo "Back to Main Menu..."
break 2
;;
*)
echo "Invalid Entry, stop messing around monkey."
break 2
;;
esac
done
break
;;
"WindowsXP")
echo "Windows XP doesn't support shell installation idiot!" & echo "Exiting now..."
break
;;
"Display System Info")
echo "System Info"
echo "#########################################"
echo ""
lsb_release -a
echo ""
echo ">>Apache:"
echo "" 
httpd -v
echo ""
echo ">>PHP Version:"
echo ""
php -v
echo ""
echo ">>DB Version:"
echo ""
mysqld --version
echo ""
echo "#########################################"
echo ""
break
;;
"Exit")
echo "Exiting Now..."
exit 0
break
;;
*)
echo "Invalid entry, stop messing around monkey."
break
;;
esac
done
done
exit 0
fi
-
# 
#                         · All rights reserved © 2010 - 2019 ·
# [WebShells Services](https://www.wshells.ws) & [Open Source Point of Sale](https://opensourcepos.org)
#
# This Script was created for OSPOS ( OpensourcePOS ) project exclusively. 
# Redistributing, using, modifying, or claiming ownership for any type of usage is totally prohibited/restricted.
# Any person or company found breaching the license agreement will have a bunch of monkeys at the door ready to destroy their servers.
